services:
  - postgres:latest

variables:
  POSTGRES_DB: bike_parking_toronto
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: ""

test:
  script:
  # this configures Django application to use attached postgres database that is run on `postgres` host
  - apt-get update -qy
  - apt-get install -y python-dev python-pip
  - pip install -r requirements.txt
  - python manage.py test

staging:
  type: deploy
  script:
  - apt-get update -qy
  - apt-get install -y ruby-dev
  - apt-get install apt-transport-https
  - echo "deb https://cli-assets.heroku.com/branches/stable/apt ./" > /etc/apt/sources.list.d/heroku.list
  - wget -O- https://cli-assets.heroku.com/apt/release.key | apt-key add -
  - apt-get install -y heroku
  - gem install dpl
  - dpl --provider=heroku --app=torontobikeparking-staging --api-key=$HEROKU_STAGING_API_KEY
  - heroku run python manage.py makemigrations --exit-code --app torontobikeparking-staging
  - heroku run python manage.py migrate --exit-code --app torontobikeparking-staging
  only:
  - master

production:
  type: deploy
  script:
  - apt-get update -qy
  - apt-get install -y ruby-dev
  - gem install dpl
  - dpl --provider=heroku --app=torontobikeparking --api-key=$HEROKU_PRODUCTION_API_KEY
  only:
  - tags
