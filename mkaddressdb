#!/bin/bash

OPTION=''
USER='-U postgres'
ADDR='-h 127.0.0.1'
URI='http://opendata.toronto.ca/gcc/address_points_wgs84.zip'
DATABASE='address'
SECONDARY_PROCESS=''
LIST_TYPES='address_types'
SHAPE_FILE='ADDRESS_POINT_WGS84'
GEO_TABLE='public.address_point'

INVALID_OPTION=''
for ARGUMENT do 
   if [ -n "$OPTION" ]; then
      case $OPTION in
         '--user' | '-U'       )  USER="-U $ARGUMENT";;
         '--target' | '-t'     )  ADDR="-h $ARGUMENT";;
         '--source' | '-s'     )  URI=$ARGUMENT;;
         '--database' | '-d'   )  DATABASE=$ARGUMENT;;
         '--secondary' | '-S'  )  SECONDARY_PROCESS=$ARGUMENT;;
         '--list-types' | '-l' )  LIST_TYPES=$ARGUMENT;;
         '--shape' | '-h'      )  SHAPE_FILE=$ARGUMENT;;
         '--geo-table' | '-g'  )  GEO_TABLE=$ARGUMENT;;
         *                     )  INVALID_OPTION=$OPTION;;
      esac
      OPTION=''
   else
      OPTION=$ARGUMENT
   fi
done

if [ -n "$INVALID_OPTION" ]; then
   echo "$INVALID_OPTION is invalid"
   exit 1
elif [ -n "$OPTION" ]; then
   echo "$OPTION has no value or is invalid"
   exit 1
fi

psql $USER $ADDR -c 'SELECT * FROM pg_available_extensions;' | grep -q postgis
if [ $? = 0 ] ; then
   echo 'postgis extension(s) detected, ready to process'
else
   echo 'geographic data extensions to postgres must be installed'
   echo 'see http://trac.osgeo.org/postgis/wiki/UsersWikiPostGIS23UbuntuPGSQL96Apt'
fi

sed "s/db_id/$DATABASE/" sql/makegisdb.sql | psql $USER $ADDR
sed "s/db_id/test_$DATABASE/" sql/makegisdb.sql | psql $USER $ADDR
PDIR=$(pwd)
DB=$(mktemp -d)
cd $DB
curl --output dl.zip $URI
unzip dl.zip

shp2pgsql -I -s 4326 "$SHAPE_FILE.shp" $GEO_TABLE | psql $USER $ADDR -q -d $DATABASE 
shp2pgsql -I -s 4326 "$SHAPE_FILE.shp" $GEO_TABLE | psql $USER $ADDR -q -d test_$DATABASE 

cd $PDIR
rm -r $DB

if [ -n "$SECONDARY_PROCESS" ]; then
   psql $USER $ADDR -f sql/$SECONDARY_PROCESS.sql -d $DATABASE
   psql $USER $ADDR -f sql/$SECONDARY_PROCESS.sql -d test_$DATABASE
fi

if [ -n "$LIST_TYPES" ]; then
   psql $USER $ADDR -f "sql/$LIST_TYPES.sql" "-d $DATABASE"
   psql $USER $ADDR -f "sql/$LIST_TYPES.sql" "-d test_$DATABASE"
fi


